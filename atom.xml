<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ellendan</title>
  
  <subtitle>逆水行舟，不进则退。</subtitle>
  <link href="https://ellendan.com/atom.xml" rel="self"/>
  
  <link href="https://ellendan.com/"/>
  <updated>2024-07-05T09:40:27.090Z</updated>
  <id>https://ellendan.com/</id>
  
  <author>
    <name>Ellen Dan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>两日一概念之Azure篇 —— Azure Backup</title>
    <link href="https://ellendan.com/2024/07/05/liang-ri-yi-gai-nian-zhi-azure-pian-azure-backup/"/>
    <id>https://ellendan.com/2024/07/05/liang-ri-yi-gai-nian-zhi-azure-pian-azure-backup/</id>
    <published>2024-07-05T08:30:13.000Z</published>
    <updated>2024-07-05T09:40:27.090Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面介绍了&lt;a href=&quot;../02/%E4%B8%A4%E6%97%A5%E4%B8%80%E6%A6%82%E5%BF%B5%E4%B9%8BAzure%E7%AF%87-%E2%80%94%E2%80%94-Virtual-Machine.md&quot;&gt;Azure</summary>
        
      
    
    
    
    <category term="Cloud" scheme="https://ellendan.com/categories/Cloud/"/>
    
    
    <category term="Azure" scheme="https://ellendan.com/tags/Azure/"/>
    
    <category term="两日一概念" scheme="https://ellendan.com/tags/%E4%B8%A4%E6%97%A5%E4%B8%80%E6%A6%82%E5%BF%B5/"/>
    
    <category term="Cloud" scheme="https://ellendan.com/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>两日一概念之Azure篇 —— Virtual Machine</title>
    <link href="https://ellendan.com/2024/07/02/liang-ri-yi-gai-nian-zhi-azure-pian-virtual-machine/"/>
    <id>https://ellendan.com/2024/07/02/liang-ri-yi-gai-nian-zhi-azure-pian-virtual-machine/</id>
    <published>2024-07-02T07:39:45.000Z</published>
    <updated>2024-07-05T09:40:27.090Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Azure Virtual Machine（简称 VM） 是 Azure 云上的一种非常基本的计算资源，同类竞品有 AWS 上的 EC2、阿里云上的 ECS</summary>
        
      
    
    
    
    <category term="Cloud" scheme="https://ellendan.com/categories/Cloud/"/>
    
    
    <category term="Azure" scheme="https://ellendan.com/tags/Azure/"/>
    
    <category term="两日一概念" scheme="https://ellendan.com/tags/%E4%B8%A4%E6%97%A5%E4%B8%80%E6%A6%82%E5%BF%B5/"/>
    
    <category term="Cloud" scheme="https://ellendan.com/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>使用HuggingFace Transformers进行NLP模型微调</title>
    <link href="https://ellendan.com/2024/06/18/shi-yong-huggingface-transformers-jin-xing-mo-xing-wei-diao/"/>
    <id>https://ellendan.com/2024/06/18/shi-yong-huggingface-transformers-jin-xing-mo-xing-wei-diao/</id>
    <published>2024-06-18T05:56:28.000Z</published>
    <updated>2024-07-05T09:40:27.090Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;关注 AI 领域信息的小伙伴们，基本对 HuggingFace Hub 早已耳熟能详。&lt;br&gt;
简单来说，HuggingFace Hub</summary>
        
      
    
    
    
    <category term="AI" scheme="https://ellendan.com/categories/AI/"/>
    
    
    <category term="ML" scheme="https://ellendan.com/tags/ML/"/>
    
    <category term="AI" scheme="https://ellendan.com/tags/AI/"/>
    
    <category term="HuggingFace" scheme="https://ellendan.com/tags/HuggingFace/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 组件架构回顾</title>
    <link href="https://ellendan.com/2024/03/19/kubernetes-zu-jian-jia-gou-hui-gu/"/>
    <id>https://ellendan.com/2024/03/19/kubernetes-zu-jian-jia-gou-hui-gu/</id>
    <published>2024-03-19T09:09:16.000Z</published>
    <updated>2024-07-05T09:40:27.090Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面回顾了 Kubernetes 的逻辑概念模型和使用，这篇主要回顾一下 Kubernetes 的组件架构。&lt;br&gt;
之前提到 Kubernetes 将集群中的机器划分为至少一个 Master 节点和一群 Node 节点。&lt;/p&gt;
&lt;p&gt;Master</summary>
        
      
    
    
    
    <category term="Kubernetes" scheme="https://ellendan.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://ellendan.com/tags/Kubernetes/"/>
    
    <category term="云原生" scheme="https://ellendan.com/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 逻辑模型和使用回顾</title>
    <link href="https://ellendan.com/2024/03/10/kubernetes-luo-ji-mo-xing-he-shi-yong-hui-gu/"/>
    <id>https://ellendan.com/2024/03/10/kubernetes-luo-ji-mo-xing-he-shi-yong-hui-gu/</id>
    <published>2024-03-10T17:35:05.000Z</published>
    <updated>2024-07-05T09:40:27.086Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;各模型概念的定义模版，此文中不会详细涉及。k8s 模版管理和构建工具，比较推荐 Skaffold 或 helm。&lt;br&gt;
如果想使用 kubectl 命令挨个调用的话，常用的命令规则：&lt;br&gt;
&lt;code&gt;创建/更新&lt;/code&gt;：&lt;code&gt;kubectl</summary>
        
      
    
    
    
    <category term="Kubernetes" scheme="https://ellendan.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://ellendan.com/tags/Kubernetes/"/>
    
    <category term="云原生" scheme="https://ellendan.com/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>spring-cloud-kubernetes 微服务框架使用</title>
    <link href="https://ellendan.com/2024/03/09/spring-cloud-kubernetes-wei-fu-wu-kuang-jia-shi-yong/"/>
    <id>https://ellendan.com/2024/03/09/spring-cloud-kubernetes-wei-fu-wu-kuang-jia-shi-yong/</id>
    <published>2024-03-09T19:17:09.000Z</published>
    <updated>2024-07-05T09:40:27.078Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;虽然时至当下，微服务架构已经推出了Service Mesh、Serverless等方式，但使用 Spring cloud 这种 SDK框架方式搭建微服务的企业仍然众多。&lt;br&gt;
随着 K8S 的普及、Spring cloud Netflix 套组官方放弃维护，Spring</summary>
        
      
    
    
    
    <category term="Spring Cloud" scheme="https://ellendan.com/categories/Spring-Cloud/"/>
    
    
    <category term="Spring Cloud" scheme="https://ellendan.com/tags/Spring-Cloud/"/>
    
    <category term="Kubernetes" scheme="https://ellendan.com/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>macOS安装sonarqube</title>
    <link href="https://ellendan.com/2023/12/14/macos-an-zhuang-sonarqube/"/>
    <id>https://ellendan.com/2023/12/14/macos-an-zhuang-sonarqube/</id>
    <published>2023-12-14T11:41:42.000Z</published>
    <updated>2024-07-05T09:40:27.074Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;1-环境准备&quot;&gt;1. 环境准备&lt;/h3&gt;
&lt;p&gt;提前预安装好 docker 和 postgresql 数据库。&lt;br&gt;
sonarqube</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://ellendan.com/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="https://ellendan.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>一劳永逸 NGINX 反向代理转发配置</title>
    <link href="https://ellendan.com/2023/11/21/yi-lao-yong-yi-nginx-fan-xiang-dai-li-zhuan-fa-pei-zhi/"/>
    <id>https://ellendan.com/2023/11/21/yi-lao-yong-yi-nginx-fan-xiang-dai-li-zhuan-fa-pei-zhi/</id>
    <published>2023-11-21T07:47:46.000Z</published>
    <updated>2024-07-05T09:40:27.074Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;当项目环境 setup 时，针对不同的技术选型，一些时候需要自己使用 NGINX 配置反向代理。&lt;br&gt;
每当这个时候，我总是记不住 location 和 proxy_pass 中路径带 &lt;code&gt;/&lt;/code&gt; 和不带 &lt;code&gt;/&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://ellendan.com/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="https://ellendan.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>定时自动删除ACR images</title>
    <link href="https://ellendan.com/2023/11/17/ding-shi-zi-dong-shan-chu-acr-images/"/>
    <id>https://ellendan.com/2023/11/17/ding-shi-zi-dong-shan-chu-acr-images/</id>
    <published>2023-11-17T14:46:56.000Z</published>
    <updated>2024-07-05T09:40:27.074Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在之前 Azure App Service 部署时，使用到了 Azure Container Register，对于许多项目而言，超过一定时限的历史 images 再次使用的几率近乎为零。&lt;br&gt;
因此，无论从制品管理，还是存储成本，定期清除不使用的</summary>
        
      
    
    
    
    <category term="Azure" scheme="https://ellendan.com/categories/Azure/"/>
    
    
    <category term="Azure" scheme="https://ellendan.com/tags/Azure/"/>
    
    <category term="云平台" scheme="https://ellendan.com/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>在 Python 技术栈下做 DB Migration —— Alembic（Flask Migration）</title>
    <link href="https://ellendan.com/2023/11/12/zai-python-ji-zhu-zhan-xia-zuo-db-migration-alembic-flask-migration/"/>
    <id>https://ellendan.com/2023/11/12/zai-python-ji-zhu-zhan-xia-zuo-db-migration-alembic-flask-migration/</id>
    <published>2023-11-12T09:09:13.000Z</published>
    <updated>2024-07-05T09:40:27.074Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 Java 技术栈常用的 DB Migration 工具有 Flyway、Liquibase，可以快速集成在Spring boot中运行。&lt;br&gt;
那在 Python 技术栈中，相似功能的工具有么？自然是有的。&lt;br&gt;
有人编写了 pyliquibase，想要将</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ellendan.com/categories/Python/"/>
    
    
    <category term="Python" scheme="https://ellendan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sqlalchemy 对于 sequence 的支持</title>
    <link href="https://ellendan.com/2023/10/18/sqlalchemy-dui-yu-sequence-de-zhi-chi/"/>
    <id>https://ellendan.com/2023/10/18/sqlalchemy-dui-yu-sequence-de-zhi-chi/</id>
    <published>2023-10-18T07:16:52.000Z</published>
    <updated>2024-07-05T09:40:27.074Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;sqlalchemy 对于 sequence 的支持（底层数据库引擎必须具有 sequence 功能），具有简单易用性。&lt;br&gt;
比如下面这个例子：&lt;br&gt;
假设创建不同类型的 World 时，需要一个序列码，此序列码单类型内唯一。&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ellendan.com/categories/Python/"/>
    
    
    <category term="Python" scheme="https://ellendan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用 GITHUB WORKFLOW 自动发布 Azure CR 和部署 Azure App Service</title>
    <link href="https://ellendan.com/2023/09/01/shi-yong-github-workflow-zi-dong-fa-bu-azure-cr-he-bu-shu-azure-app-service/"/>
    <id>https://ellendan.com/2023/09/01/shi-yong-github-workflow-zi-dong-fa-bu-azure-cr-he-bu-shu-azure-app-service/</id>
    <published>2023-09-01T12:21:11.000Z</published>
    <updated>2024-07-05T09:40:27.062Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;Azure-App-Service-概述&quot;&gt;Azure App Service 概述&lt;/h3&gt;
&lt;p&gt;Azure 计算服务提供了多种类型：&lt;code&gt;VM&lt;/code&gt;、&lt;code&gt;Container apps&lt;/code&gt;、&lt;code&gt;App</summary>
        
      
    
    
    
    <category term="Azure" scheme="https://ellendan.com/categories/Azure/"/>
    
    
    <category term="Azure" scheme="https://ellendan.com/tags/Azure/"/>
    
    <category term="云平台" scheme="https://ellendan.com/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Azure Administrator Associate 考试知识点</title>
    <link href="https://ellendan.com/2023/05/30/azure-administrator-associate-zhi-shi-dian/"/>
    <id>https://ellendan.com/2023/05/30/azure-administrator-associate-zhi-shi-dian/</id>
    <published>2023-05-30T09:44:11.000Z</published>
    <updated>2024-07-05T09:40:27.058Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Azure Administrator Associate 涉及五个知识块，下面是官方考证角度给出的清单：&lt;br&gt;
&lt;img</summary>
        
      
    
    
    
    <category term="Azure" scheme="https://ellendan.com/categories/Azure/"/>
    
    
    <category term="Azure" scheme="https://ellendan.com/tags/Azure/"/>
    
    <category term="云平台" scheme="https://ellendan.com/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用Gradio&amp;huggingface快速搭建一个ChatGPT APP</title>
    <link href="https://ellendan.com/2023/05/17/shi-yong-gradio-huggingface-kuai-su-da-jian-yi-ge-chatgpt-app/"/>
    <id>https://ellendan.com/2023/05/17/shi-yong-gradio-huggingface-kuai-su-da-jian-yi-ge-chatgpt-app/</id>
    <published>2023-05-17T16:38:39.000Z</published>
    <updated>2024-07-05T09:40:27.046Z</updated>
    
    
    <summary type="html">&lt;p&gt;在现在的NLP领域，GPT系列模型已经成为了NLP领域的标配之一，而ChatGPT是基于GPT的一个聊天模型，可以用来生成对话，其效果非常好，可以说是目前最好的开源聊天模型了。&lt;br&gt;
不少使用者已经将ChatGPT当做了日常工作的助手，下面这个chat界面基本已经广为人知。&lt;br&gt;
&lt;img src=&quot;/2023/05/17/shi-yong-gradio-huggingface-kuai-su-da-jian-yi-ge-chatgpt-app/chatGPT_conversation.png&quot; alt=&quot;ChatGPT会话界面&quot;&gt;&lt;/p&gt;
&lt;p&gt;但 ChatGPT 并不仅仅是支持以上的聊天会话功能，OpenAI 公司也开放了以上会话聊天背后的 API。&lt;/p&gt;</summary>
    
    
    
    <category term="ChatGPT" scheme="https://ellendan.com/categories/ChatGPT/"/>
    
    
    <category term="Python" scheme="https://ellendan.com/tags/Python/"/>
    
    <category term="ChatGPT" scheme="https://ellendan.com/tags/ChatGPT/"/>
    
    <category term="ML" scheme="https://ellendan.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>反手回摸Oracle</title>
    <link href="https://ellendan.com/2022/08/22/fan-shou-hui-mo-oracle/"/>
    <id>https://ellendan.com/2022/08/22/fan-shou-hui-mo-oracle/</id>
    <published>2022-08-22T18:31:00.000Z</published>
    <updated>2024-07-05T09:40:27.042Z</updated>
    
    
    <summary type="html">&lt;p&gt;最后一次用 Oracle 应该还是在2012的时候，之后就一路用开源数据库。&lt;br&gt;
没想到现在还有反手回摸的时候。&lt;br&gt;
回摸也就算了，等准备好 Oracle 知识回顾，最后发现计划赶不上变化，暂时用不上了。&lt;br&gt;
重新 review 了一把自己的kanban和计划清单，赶紧记录一下，回到目标的事务上去。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://ellendan.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://ellendan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>聊聊研发效能治理方案的理论框架（下篇）</title>
    <link href="https://ellendan.com/2022/07/18/liao-liao-yan-fa-xiao-neng-zhi-li-fang-an-de-li-lun-kuang-jia-xia-pian/"/>
    <id>https://ellendan.com/2022/07/18/liao-liao-yan-fa-xiao-neng-zhi-li-fang-an-de-li-lun-kuang-jia-xia-pian/</id>
    <published>2022-07-18T08:00:00.000Z</published>
    <updated>2024-07-05T09:40:27.042Z</updated>
    
    
    <summary type="html">&lt;p&gt;已经过了一旬，下篇居然还没开始动笔。&lt;br&gt;
反思了一下人生：P&lt;br&gt;
书接上回。&lt;/p&gt;</summary>
    
    
    
    <category term="敏捷精益软件" scheme="https://ellendan.com/categories/%E6%95%8F%E6%8D%B7%E7%B2%BE%E7%9B%8A%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="精益" scheme="https://ellendan.com/tags/%E7%B2%BE%E7%9B%8A/"/>
    
  </entry>
  
  <entry>
    <title>聊聊研发效能治理方案的理论框架（上篇）</title>
    <link href="https://ellendan.com/2022/07/02/liao-liao-yan-fa-xiao-neng-zhi-li-fang-an-de-li-lun-kuang-jia-shang-pian/"/>
    <id>https://ellendan.com/2022/07/02/liao-liao-yan-fa-xiao-neng-zhi-li-fang-an-de-li-lun-kuang-jia-shang-pian/</id>
    <published>2022-07-02T12:00:00.000Z</published>
    <updated>2024-07-05T09:40:27.038Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近几年，国内业界越来越常提及&lt;code&gt;“研发效能”&lt;/code&gt;这个词，追其根源大部分是始于&lt;code&gt;“DevOps”&lt;/code&gt;运动的活跃。&lt;br&gt;
知道 DevOps 发展历史的，基本都了解 DevOps 是受敏捷的影响，是敏捷原则在软件研发到运维运营层面的延伸。&lt;br&gt;
很多云厂商在推广自己 DevOps 平台服务的时候，也会提及对&lt;code&gt;“研发效能”&lt;/code&gt;的大幅度影响，比如 AWS 对 DevOps 的描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DevOps is the combination of cultural philosophies, practices, and tools that increases an organization’s ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes. This speed enables organizations to better serve their customers and compete more effectively in the market.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么，研发效能 == DevOps 吗？&lt;br&gt;
答案自然是否定 。&lt;/p&gt;</summary>
    
    
    
    <category term="敏捷精益软件" scheme="https://ellendan.com/categories/%E6%95%8F%E6%8D%B7%E7%B2%BE%E7%9B%8A%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="精益" scheme="https://ellendan.com/tags/%E7%B2%BE%E7%9B%8A/"/>
    
  </entry>
  
  <entry>
    <title>数据库的ACID和分布式事务</title>
    <link href="https://ellendan.com/2022/05/10/shu-ju-ku-de-acid-he-fen-bu-shi-shi-wu/"/>
    <id>https://ellendan.com/2022/05/10/shu-ju-ku-de-acid-he-fen-bu-shi-shi-wu/</id>
    <published>2022-05-10T12:00:00.000Z</published>
    <updated>2024-07-05T09:40:27.034Z</updated>
    
    
    <summary type="html">&lt;p&gt;前面写了一篇关于&lt;code&gt;CAP原理&lt;/code&gt;的博文，说到&lt;code&gt;一致性 Consistency&lt;/code&gt;，有人往往会想到事务&lt;code&gt;ACID&lt;/code&gt;特性中的&lt;code&gt;C: Consistency&lt;/code&gt;，虽然都叫一致性，但完全是两个东西。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CAP&lt;/code&gt;的一致性指：数据库的同一复制集（replicaSet）之间数据相同。&lt;br&gt;
&lt;em&gt;这里的“数据库”，可以是主从、主备、集群架构，但没有单机架构。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ACID&lt;/code&gt;的一致性指：在数据库单一实例中(暂不涉及多个数据源的分布式事务)，成功写入的数据不违反已定义的数据规则，如约束、级联规则等等。&lt;br&gt;
&lt;em&gt;一般在&lt;code&gt;业务流程&lt;/code&gt;这个上下文下，聊&lt;code&gt;数据的一致性&lt;/code&gt;，通常是在聊广义的数据一致性，即&lt;code&gt;ACID&lt;/code&gt;这四项，并非是&lt;code&gt;C&lt;/code&gt;一项。单机数据库就是通过事务来保障&lt;code&gt;数据的一致性&lt;/code&gt;。&lt;/em&gt;&lt;br&gt;
接着，来通过本地事务的详细说一下&lt;code&gt;ACID&lt;/code&gt;，以及跨多数据源的分布式事务。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://ellendan.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://ellendan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>分布式架构必须重视的CAP理论</title>
    <link href="https://ellendan.com/2022/05/03/fen-bu-shi-jia-gou-bi-xu-chong-shi-de-cap-li-lun/"/>
    <id>https://ellendan.com/2022/05/03/fen-bu-shi-jia-gou-bi-xu-chong-shi-de-cap-li-lun/</id>
    <published>2022-05-03T12:00:00.000Z</published>
    <updated>2024-07-05T09:40:27.034Z</updated>
    
    
    <summary type="html">&lt;p&gt;CAP定理，说起来程序员们应该耳熟能详：C(Consistency)、A(Availability)、P(Partition Tolerance)，构成在分布式数据存储中的“不可能三角”，三者只能保证其二。&lt;br&gt;
来，再展开说说？这时候，多数人的回答就会是是而非，模棱两可。&lt;br&gt;
也许不少应用级开发工程师觉得 —— 我又不自研集群数据库，也不开发云平台，没必要那么了解 CAP 理论。&lt;br&gt;
那么，你开发的应用系统，是否使用了分布式架构呢？如果是，CAP 理论可以说是指导构建系统的技术理论基石之一，必须要重视起来。&lt;/p&gt;</summary>
    
    
    
    <category term="分布式架构" scheme="https://ellendan.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="分布式架构" scheme="https://ellendan.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>重启</title>
    <link href="https://ellendan.com/2022/04/29/chong-qi/"/>
    <id>https://ellendan.com/2022/04/29/chong-qi/</id>
    <published>2022-04-29T04:12:00.000Z</published>
    <updated>2024-07-05T09:40:27.034Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近回忆过往工作经历，发现以往知识经验、林林总总，所思所想胡乱堆积，没有整理成一套逻辑明了的结构纲要。&lt;br&gt;
因此，予以记忆而言，效率不高，且没有关联的知识块容易遗忘；予以表达而言，易思维阻塞，前后逻辑不顺；予以认清知识本质而言，重复颇多，而且只见云雾不见青山。&lt;br&gt;
所以，现觉得对自身的知识储备进行重构，迫在眉睫。&lt;br&gt;
那么，有没有一种看起来比较靠谱的架构解决方案可以达到此目的呢？&lt;br&gt;
重读《金字塔原理》之后，我觉得使用“金字塔结构”可以一试。&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://ellendan.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="写作" scheme="https://ellendan.com/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
</feed>
